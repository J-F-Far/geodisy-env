---
- name: Install system packages
  become: yes
  yum:
    name: "{{ item }}"
    state: present
  tags:
    - install-geoblacklight
    - packages
  with_items:
    - git-core
    - zlib
    - zlib-devel
    - gcc-c++
    - patch
    - readline
    - readline-devel
    - libyaml-devel
    - libffi-devel
    - openssl-devel
    - make
    - bzip2
    - automake
    - autoconf
    - libtool
    - bison
    - curl
    - sqlite-devel

- name: Create geoblack user
  become: yes
  user:
    name: "geoblack"
    state: present
    system: yes
  tags:
    - install-geoblacklight

- name: Create GeoBlacklight directory
  become: yes
  file:
    state: directory
    path: "{{ geoblacklight_dir }}"
    owner: "geoblack"
    group: "geoblack"

# Test for Ruby PATH addition first, to prevent duplication on re-runs
- name: Test for Ruby PATH in geoblack .bashrc
  become: yes
  become_user: geoblack
  lineinfile:
    path: "$HOME/.bashrc"
    state: present
    line: "# ANSIBLE MANAGED RBENV_PATH"
  check_mode: yes 
  register: ruby_path_exists
  failed_when: ruby_path_exists is changed
  ignore_errors: yes
  tags:
    - install-geoblacklight

- name: Add rbenv location to PATH
  become: yes
  become_user: geoblack
  when: ruby_path_exists is failed
  blockinfile:
    marker: "# ANSIBLE MANAGED RBENV_PATH"
    state: present
    block: 'export PATH="$HOME/.rbenv/bin:$PATH"'
    path: "$HOME/.bashrc"
  tags:
    - install-geoblacklight

# Test for Ruby init command first, to prevent duplication on re-runs
- name: Test for Ruby init command in geoblack .bashrc
  become: yes
  become_user: geoblack
  lineinfile:
    path: "$HOME/.bashrc"
    state: present
    line: "# ANSIBLE MANAGED RBENV_INIT"
  check_mode: yes 
  register: ruby_init_exists
  failed_when: ruby_init_exists is changed
  ignore_errors: yes
  tags:
    - install-geoblacklight

- name: Init RBEnv
  become: yes
  become_user: geoblack
  when: ruby_init_exists is failed
  blockinfile:
    marker: "# ANSIBLE MANAGED RBENV_INIT"
    state: present
    block: 'eval "$(rbenv init -)"'
    path: "$HOME/.bashrc"
  tags:
    - install-geoblacklight

# 'source'ing the .bashrc before running this command feels a bit messy, but I dont know 
# enough about Ruby to clean this up yet. It works for now.
# Seems to return a failed exit status back to Ansible even though the command has worked
- name: Install Ruby and Gems as GeoBlackLight user
  become: yes
  become_user: geoblack
  shell: 
    cmd: "source $HOME/.bashrc && curl -sL https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-installer | bash -"
  ignore_errors: yes
    - install-geoblacklight
  
- name: Test for previous install of Ruby version
  become: yes
  become_user: geoblack
  shell: "source $HOME/.bashrc && rbenv versions"
  register: ruby_versions
  ignore_errors: yes
  tags:
    - install-geoblacklight

- name: Install Ruby
  become: yes
  become_user: geoblack
  shell: "source $HOME/.bashrc && rbenv install {{ ruby_ver }}"
  when: ruby_ver not in ruby_versions.stdout
  ignore_errors: yes
  tags:
    - install-geoblacklight

- name: Make Ruby version global default
  become: yes
  become_user: geoblack
  shell: "source $HOME/.bashrc && rbenv global {{ ruby_ver }}"
  tags:
    - install-geoblacklight

      #- name: Install rails gem
      #  become: yes
      #  become_user: geoblack
      #  gem:
      #    executable: "$HOME/.rbenv/shims/gem"
      #    name: rails
      #    version: 5.2.3
      #    state: present
      #  tags:
      #    - install-geoblacklight
      #
      #- name: Install bundler gem
      #  become: yes
      #  become_user: geoblack
      #  gem:
      #    executable: "$HOME/.rbenv/shims/gem"
      #    name: bundler 
      #    version: 2.0.2
      #    build_flags: "--default"
      #    state: present
      #  tags:
      #    - install-geoblacklight
      #
      #- name: Install execjs gem
      #  become: yes
      #  become_user: geoblack
      #  gem:
      #    executable: "$HOME/.rbenv/shims/gem"
      #    name: execjs
      #    state: present
      #  tags:
      #    - install-geoblacklight
      #
      #- name: Install railties gem
      #  become: yes
      #  become_user: geoblack
      #  gem:
      #    executable: "$HOME/.rbenv/shims/gem"
      #    name: railties
      #    version: 5.2.3
      #    state: present
      #  tags:
      #    - install-geoblacklight

- name: Update RobyGems system version
  become: yes
  become_user: geoblack
  shell: "source ~/.bashrc && gem update --system"
  tags:
      - install-geoblacklight  

- name: Install rails gem
  become: yes
  become_user: geoblack
  shell: "source ~/.bashrc && gem install rails -v 5.2.3"
  tags:
    - install-geoblacklight
 
- name: Install bundler gem
  become: yes
  become_user: geoblack
  shell: "source ~/.bashrc && gem install bundler -v 2.1.4 --default"
  tags:
    - install-geoblacklight

- name: Install execjs gem
  become: yes
  become_user: geoblack
  shell: "source ~/.bashrc && gem install execjs"
  tags:
    - install-geoblacklight

- name: Install execjs gem
  become: yes
  become_user: geoblack
  shell: "source ~/.bashrc && gem install railties -v 5.2.3"
  tags:
    - install-geoblacklight

      #- name: Rehash Ruby gems
      #  become: yes
      #  become_user: geoblack
      #  shell: "source ~/.bashrc && rbenv rehash"
      #  tags:
      #    - install-geoblacklight

- name: Install GeoBlacklight Rails application
  become: yes
  become_user: geoblack
  ignore_errors: yes
  shell:
    chdir: /opt/geoblacklight/
    cmd: "source ~/.bashrc && RBENV_VERSION={{ ruby_ver }} rbenv exec rails _5.2.3_ new geodisy -m https://raw.githubusercontent.com/geoblacklight/geoblacklight/master/template.rb"  
  tags:
    - install-geoblacklight

- name: Create GeoBlacklight solr core
  become: yes
  become_user: solr
  shell: "/opt/solr/bin/solr create_core -c {{ geoblacklight_core_name }}"
  ignore_errors: yes # core already exists error
  tags:
    - install-geoblacklight

# Initialize GeoBlacklight Solr core as per Pauls email instructions
- name: Create a conf dir for geoblacklight-core
  become: yes
  become_user: solr
  file:
    state: directory
    path: "/var/solr/data/{{ geoblacklight_core_name }}/conf"
  tags:
    - install-geoblacklight

- name: Create a data dir for geoblacklight-core
  become: yes
  become_user: solr
  file:
    state: directory
    path: "/var/solr/data/{{ geoblacklight_core_name }}/data"
  tags:
    - install-geoblacklight

- name: Copy Solr core conf from geoblacklight project
  become: yes
  become_user: solr
  copy:
    src: /opt/geoblacklight/geodisy/solr/conf/
    dest: "/var/solr/data/{{ geoblacklight_core_name }}/conf/"
  tags:
    - install-geoblacklight

- name: Install blacklight.yml config file
  become: yes
  become_user: geoblack
  template:
    src: blacklight.yml.j2
    dest: /opt/geoblacklight/geodisy/config/blacklight.yml
  tags:
    - install-geoblacklight

# Install GeoBlacklight application
- name: Check out GeoCombine code
  become: yes
  become_user: geoblack
  git:
    repo: https://github.com/OpenGeoMetadata/GeoCombine.git
    dest: /home/geoblack/GeoCombine
  tags:
    - install-geoblacklight
    - install-geocombine

- name: Install GeoCombine bundle
  become: yes
  become_user: geoblack
  shell: 
    cmd: "source ~/.bashrc && bundle install"
    chdir: ~/GeoCombine
  tags:
    - install-geoblacklight
    - install-geocombine

- name: Install GeoCombine rake file
  become: yes
  become_user: geoblack
  template:
    src: geo_combine.rake.j2
    dest: ~/GeoCombine/lib/tasks/geo_combine.rake
  tags:
    - install-geoblacklight
    - install-geocombine

- name: Install Geoblacklight systemd service file
  become: yes
  template:
    src: geoblacklight.service.j2
    dest: /etc/systemd/system/geoblacklight.service
  tags:
    - install-geoblacklight

- name: Enable/Start GeoBlacklight systemd service
  become: yes
  systemd:
    name: geoblacklight
    enabled: yes
    state: restarted
  tags:
    - install-geoblacklight
      
