---
- name: Install system packages
  become: yes
  yum:
    name: "{{ item }}"
    state: present
  tags:
    - install-ruby
    - packages
  with_items:
    - git-core
    - zlib
    - zlib-devel
    - gcc-c++
    - patch
    - readline
    - readline-devel
    - libyaml-devel
    - libffi-devel
    - openssl-devel
    - make
    - bzip2
    - automake
    - autoconf
    - libtool
    - bison
    - curl
    - sqlite-devel

# Geoblack user needs to be on both machines because of how Venkhat configured GeoCombine
- name: Create geoblack user
  become: yes
  user:
    name: "geoblack"
    state: present
    system: yes
  tags:
    - install-ruby

#- name: Create GeoBlacklight directory
#  become: yes
#  file:
#    state: directory
#    path: "{{ geoblacklight_dir }}"
#    owner: "geoblack"
#    group: "geoblack"
#  tags:
#    - install-ruby

# 'source'ing the .bashrc before running this command feels a bit messy, but I dont know 
# enough about Ruby to clean this up yet. It works for now.
# Seems to return a failed exit status back to Ansible even though the command has worked
- name: Install Ruby and Gems as GeoBlackLight user
  become: yes
  become_user: geoblack
  shell: 
    cmd: "source $HOME/.bashrc && curl -sL https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-installer | bash -"
  ignore_errors: yes
  tags:
    - install-ruby
 
# Test for Ruby PATH addition first, to prevent duplication on re-runs
- name: Test for Ruby PATH in geoblack .bashrc
  become: yes
  become_user: geoblack
  lineinfile:
    path: "$HOME/.bashrc"
    state: present
    line: "# ANSIBLE MANAGED RBENV_PATH"
  check_mode: yes 
  register: ruby_path_exists
  failed_when: ruby_path_exists is changed
  ignore_errors: yes
  tags:
    - install-ruby

- name: Add rbenv location to PATH
  become: yes
  become_user: geoblack
  when: ruby_path_exists is failed
  blockinfile:
    marker: "# ANSIBLE MANAGED RBENV_PATH"
    state: present
    block: 'export PATH="$HOME/.rbenv/bin:$PATH"'
    path: "$HOME/.bashrc"
  tags:
    - install-ruby

# Test for Ruby init command first, to prevent duplication on re-runs
- name: Test for Ruby init command in geoblack .bashrc
  become: yes
  become_user: geoblack
  lineinfile:
    path: "$HOME/.bashrc"
    state: present
    line: "# ANSIBLE MANAGED RBENV_INIT"
  check_mode: yes 
  register: ruby_init_exists
  failed_when: ruby_init_exists is changed
  ignore_errors: yes
  tags:
    - install-ruby

- name: Init RBEnv
  become: yes
  become_user: geoblack
  when: ruby_init_exists is failed
  blockinfile:
    marker: "# ANSIBLE MANAGED RBENV_INIT"
    state: present
    block: 'eval "$(rbenv init -)"'
    path: "$HOME/.bashrc"
  tags:
    - install-ruby

- name: Test for previous install of Ruby version
  become: yes
  become_user: geoblack
  shell: "source $HOME/.bashrc && rbenv versions"
  register: ruby_versions
  ignore_errors: yes
  tags:
    - install-ruby

- name: Install Ruby
  become: yes
  become_user: geoblack
  shell: "source $HOME/.bashrc && rbenv install {{ ruby_ver }}"
  when: ruby_ver not in ruby_versions.stdout
  ignore_errors: yes
  tags:
    - install-ruby

- name: Make Ruby version global default
  become: yes
  become_user: geoblack
  shell: "source $HOME/.bashrc && rbenv global {{ ruby_ver }}"
  tags:
    - install-ruby

- name: Update RubyGems system version
  become: yes
  become_user: geoblack
  shell: "source ~/.bashrc && gem update --system"
  tags:
      - install-ruby 

#- name: Install rails gem
#  become: yes
#  become_user: geoblack
#  shell: "source ~/.bashrc && gem install rails -v 5.2.3"
#  tags:
#    - install-geoblacklight
 
- name: Install bundler gem
  become: yes
  become_user: geoblack
  shell: "source ~/.bashrc && gem install bundler -v 2.1.4 --default"
  tags:
    - install-ruby

- name: Install execjs gem
  become: yes
  become_user: geoblack
  shell: "source ~/.bashrc && gem install execjs"
  tags:
    - install-ruby

- name: Install execjs gem
  become: yes
  become_user: geoblack
  shell: "source ~/.bashrc && gem install railties -v 5.2.3"
  tags:
    - install-ruby

